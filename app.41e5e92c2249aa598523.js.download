(self.webpackChunkdbt_cloud=self.webpackChunkdbt_cloud||[]).push([[143],{70472:(module,__unused_webpack_exports,__webpack_require__)=>{var enterModule;module=__webpack_require__.nmd(module),(enterModule="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&enterModule(module);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var reactHotLoader,leaveModule,getCookie=function(name){var cookieValue=null;if(document.cookie&&""!==document.cookie)for(var cookies=document.cookie.split(";"),i=0;i<cookies.length;){var cookie=cookies[i].trim();if(cookie.substring(0,name.length+1)===name+"="){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break}i++}return cookieValue};window.csrftoken=getCookie("csrftoken"),Promise.resolve().then((function(){(function(){return Promise.all([__webpack_require__.e(216),__webpack_require__.e(745),__webpack_require__.e(470)]).then((function(){var __WEBPACK_AMD_REQUIRE_ARRAY__=[__webpack_require__(71918),__webpack_require__(39771),__webpack_require__(77464),__webpack_require__(55248),__webpack_require__(99165),__webpack_require__(17912),__webpack_require__(41095),__webpack_require__(23289),__webpack_require__(8375),__webpack_require__(60810),__webpack_require__(69742),__webpack_require__(72263),__webpack_require__(60155),__webpack_require__(37704),__webpack_require__(2559),__webpack_require__(30443),__webpack_require__(77977),__webpack_require__(71724),__webpack_require__(29671),__webpack_require__(70208),__webpack_require__(94417),__webpack_require__(61947),__webpack_require__(74677),__webpack_require__(47853),__webpack_require__(60946),__webpack_require__(98487),__webpack_require__(43796),__webpack_require__(743),__webpack_require__(37577),__webpack_require__(644),__webpack_require__(94694),__webpack_require__(35213),__webpack_require__(63697),__webpack_require__(63072),__webpack_require__(29897),__webpack_require__(50384),__webpack_require__(1273),__webpack_require__(81674),__webpack_require__(30657),__webpack_require__(41741),__webpack_require__(26362),__webpack_require__(25854),__webpack_require__(37561),__webpack_require__(60893),__webpack_require__(77258),__webpack_require__(83353),__webpack_require__(22331),__webpack_require__(39522),__webpack_require__(92989),__webpack_require__(39219),__webpack_require__(93072),__webpack_require__(27654),__webpack_require__(21018),__webpack_require__(57373),__webpack_require__(80773),__webpack_require__(3406),__webpack_require__(50276),__webpack_require__(51321),__webpack_require__(80625),__webpack_require__(49408),__webpack_require__(67713),__webpack_require__(50838),__webpack_require__(82070),__webpack_require__(2408),__webpack_require__(686),__webpack_require__(27078),__webpack_require__(15132),__webpack_require__(41850),__webpack_require__(4579),__webpack_require__(43999),__webpack_require__(75463),__webpack_require__(74815),__webpack_require__(22033),__webpack_require__(63329),__webpack_require__(53078),__webpack_require__(21961),__webpack_require__(66101),__webpack_require__(94074),__webpack_require__(61224),__webpack_require__(23891),__webpack_require__(19001),__webpack_require__(30051),__webpack_require__(89232),__webpack_require__(76705),__webpack_require__(1053),__webpack_require__(20383)];(function(angular,ngRoute,ngResource,ngFilterUtils,mainController,containerDirective,storageService,baseService,actionButtonDirective,alertService,alertBarDirective,cloudDashboardDirective,setupConnectionDirective,connectionService,v2connectionTunnelService,connectionDetailDirective,postgresConnectionDirective,redshiftConnectionDirective,snowflakeConnectionDirective,bigqueryConnectionDirective,sshTunnelEncryptionDirective,credentialsService,userCredentialsService,postgresCredentialsDirective,redshiftCredentialsDirective,snowflakeCredentialsDirective,bigqueryCredentialsDirective,credentialsDetailDirective,profileCredentialsDirective,v3environmentService,environmentListDirective,environmentListItemDirective,environmentDetailDirective,environmentSettingsDirective,filterListDirective,filterListItemDirective,v2jobService,triggerService,jobListDirective,jobListItemDirective,jobDetailDirective,jobSettingsDirective,profileSettingsDirective,profileContactSettingsDirective,profileNotificationSettingsDirective,profileApiSettingsDirective,notificationService,notificationUnsubscribeService,notificationSettingsDirective,repositoryService,repositoryDetailDirective,v2runService,v2runCancelService,v2runArtifactsService,runListDirective,runListItemDirective,runDetailDirective,runStepDirective,sourceFreshnessDirective,settingsDirective,enterpriseSettingsDirective,billingDetailDirective,billingConfirmDirective,billingSelectPlanDirective,billingPaymentInfoDirective,avatarDirective,onUploadDirective,githubService,gitLabService,slackService,accountService,billingService,userService,constantService,logTailService,eventService,artifactService,projectService,timeService,connectionTestService,logFilter,permissionFilter,dbtDevelopDirective,developService,reactPageDirective,plansValue){var app=angular.module("dbt-cloud",[ngRoute,ngResource,ngFilterUtils]),config=function($routeProvider){if(-1===window.location.href.indexOf("verify-email"))return $routeProvider.when("/accounts/:accountid/projects/:projectid/home/",{template:'<div class="loading loading-large"></div>'}).when("/accounts/:accountid/projects/:projectid/dashboard/",{template:'<cloud-dashboard user="user.data"></cloud-dashboard>'}).when("/accounts/:accountid/projects/setup/",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/projects/:projectid/setup/",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/projects/setup/create/",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/projects/:projectid/setup/repository/",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/projects/:projectid/setup/team/",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/projects/:projectid/setup/connection/",{template:'<setup-connection user="user.data"></setup-connection>'}).when("/accounts/:accountid/projects/:projectid/setup/connection/adapter/:adaptertype",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/settings/",{template:'<settings account="accounts.current" user="user.data" page="projects-list"></settings>'}).when("/accounts/:accountid/settings/enterprise/configure-auth-provider/",{template:'<settings account="accounts.current" user="user.data" page="enterprise-configure-auth-provider"></settings>'}).when("/accounts/:accountid/settings/enterprise/verify-auth-provider/",{template:'<settings account="accounts.current" user="user.data" page="enterprise-verify-auth-provider"></settings>'}).when("/accounts/:accountid/settings/enterprise/",{template:'<settings account="accounts.current" user="user.data" page="enterprise"></settings>'}).when("/accounts/:accountid/settings/team/",{template:'<settings account="accounts.current" user="user.data" page="users-list"></settings>'}).when("/accounts/:accountid/settings/team/invite/",{template:'<settings account="accounts.current" user="user.data" page="users-invite"></settings>'}).when("/accounts/:accountid/settings/team/license-maps/",{template:'<settings account="accounts.current" user="user.data" page="license-maps-list"></settings>'}).when("/accounts/:accountid/settings/team/license-maps/:id/",{template:'<settings account="accounts.current" user="user.data" page="license-maps-detail"></settings>'}).when("/accounts/:accountid/settings/team/groups/",{template:'<settings account="accounts.current" user="user.data" page="groups-list"></settings>'}).when("/accounts/:accountid/settings/team/groups/:id/",{template:'<settings account="accounts.current" user="user.data" page="groups-detail"></settings>'}).when("/accounts/:accountid/settings/team/:id/",{template:'<settings account="accounts.current" user="user.data" page="users-detail"></settings>'}).when("/accounts/:accountid/settings/service-tokens",{template:'<settings account="accounts.current" user="user.data" page="service-tokens"></settings>'}).when("/accounts/:accountid/settings/service-tokens/:id/",{template:'<settings account="accounts.current" user="user.data" page="service-tokens-detail"></settings>'}).when("/accounts/:accountid/settings/projects/",{template:'<settings account="accounts.current" user="user.data" page="projects-list"></settings>'}).when("/accounts/:accountid/settings/projects/:projectid/",{template:'<settings account="accounts.current" project="projects.current" user="user.data" page="projects-detail"></settings>'}).when("/accounts/:accountid/settings/projects/:projectid/connections/:id/",{template:'<settings account="accounts.current" project="projects.current" user="user.data" page="connections-detail"></settings>'}).when("/accounts/:accountid/settings/projects/:projectid/repositories/create/",{template:'<settings account="accounts.current" project="projects.current" user="user.data" page="repositories-create"></settings>'}).when("/accounts/:accountid/settings/projects/:projectid/repositories/:id/",{template:'<settings account="accounts.current" project="projects.current" user="user.data" page="repositories-detail"></settings>'}).when("/accounts/:accountid/settings/billing/",{template:'<settings account="accounts.current" user="user.data" page="billing"></settings>'}).when("/accounts/:accountid/settings/billing/payment-info/",{template:'<settings account="accounts.current" user="user.data" page="billing-payment-info"></settings>'}).when("/accounts/:accountid/settings/billing/select-plan/",{template:'<settings account="accounts.current" user="user.data" page="billing-select-plan"></settings>'}).when("/accounts/:accountid/settings/billing/confirm/",{template:'<settings account="accounts.current" user="user.data" page="billing-confirm"></settings>'}).when("/accounts/:accountid/settings/integrations/",{template:'<settings account="accounts.current" user="user.data" page="integrations"></settings>'}).when("/accounts/:accountid/settings/notifications/",{template:'<settings account="accounts.current" user="user.data" page="notifications"></settings>'}).when("/accounts/:accountid/settings/metadata/",{template:'<settings account="accounts.current" user="user.data" page="metadata"></settings>'}).when("/accounts/:accountid/settings/audit-log/",{template:'<settings account="accounts.current" user="user.data" page="audit-log"></settings>'}).when("/accounts/:accountid/projects/:projectid/environments/",{template:'<environment-list user="user.data"></environment-list>'}).when("/accounts/:accountid/projects/:projectid/environments/create/",{template:'<environment-settings user="user.data"></environment-settings>'}).when("/accounts/:accountid/projects/:projectid/environments/:id/",{template:'<environment-detail user="user.data"></environment-detail>'}).when("/accounts/:accountid/projects/:projectid/environments/:id/settings/",{template:'<environment-settings user="user.data"></environment-settings>'}).when("/accounts/:accountid/projects/:projectid/jobs/",{template:'<job-list user="user.data"></job-list>'}).when("/accounts/:accountid/projects/:projectid/jobs/create/",{template:'<job-settings user="user.data"></job-settings>'}).when("/accounts/:accountid/projects/:projectid/jobs/:id/",{template:'<job-detail user="user.data"></job-detail>'}).when("/accounts/:accountid/projects/:projectid/jobs/:id/settings/",{template:'<job-settings user="user.data"></job-settings>'}).when("/accounts/:accountid/projects/:projectid/jobs/:id/status/",{template:'<react-page page="page"></react-page>'}).when("/accounts/:accountid/projects/:projectid/runs/",{template:"<run-list></run-list>"}).when("/accounts/:accountid/projects/:projectid/runs/:id/",{template:'<run-detail user="user.data"></run-detail>'}).when("/accounts/:accountid/projects/:projectid/jobs/:jobid/sources/",{template:"<source-freshness></source-freshness>"}).when("/accounts/:accountid/projects/:projectid/runs/:runid/sources/",{template:"<source-freshness></source-freshness>"}).when("/accounts/:accountid/projects/:projectid/develop/",{template:'<dbt-develop user="user.data"></dbt-develop>'}).when("/accounts/:accountid/sso-reauth",{template:'<react-page page="page"></react-page>'}).when("/profile/",{template:'<profile-settings page="contact"></profile-settings>'}).when("/profile/contact/",{template:'<profile-settings page="contact"></profile-settings>'}).when("/profile/credentials/",{template:'<profile-settings page="credentials"></profile-settings>'}).when("/profile/projects/:projectid/credentials/",{template:'<profile-settings page="credentials-detail"></profile-settings>'}).when("/profile/notifications/",{template:'<profile-settings page="notifications"></profile-settings>'}).when("/profile/api/",{template:'<profile-settings page="api"></profile-settings>'}).when("/add-account/",{template:'<react-page page="page"></react-page>'}).otherwise({template:'<div ng-if="!projects.loaded"><h1 class="text-largest">Page not found!</h1><p>Please try refreshing or navigating to a different page.</p></div>'})};return config.$inject=["$routeProvider"],app.config(config),app.controller("mainController",mainController),app.directive("container",containerDirective),app.factory("baseService",baseService),app.directive("actionButton",actionButtonDirective),app.factory("alertService",alertService),app.directive("alertBar",alertBarDirective),app.directive("cloudDashboard",cloudDashboardDirective),app.directive("setupConnection",setupConnectionDirective),app.factory("connectionService",connectionService),app.factory("v2connectionTunnelService",v2connectionTunnelService),app.directive("connectionDetail",connectionDetailDirective),app.directive("postgresConnection",postgresConnectionDirective),app.directive("redshiftConnection",redshiftConnectionDirective),app.directive("snowflakeConnection",snowflakeConnectionDirective),app.directive("bigqueryConnection",bigqueryConnectionDirective),app.directive("sshTunnelEncryption",sshTunnelEncryptionDirective),app.factory("credentialsService",credentialsService),app.factory("userCredentialsService",userCredentialsService),app.directive("postgresCredentials",postgresCredentialsDirective),app.directive("redshiftCredentials",redshiftCredentialsDirective),app.directive("snowflakeCredentials",snowflakeCredentialsDirective),app.directive("bigqueryCredentials",bigqueryCredentialsDirective),app.directive("credentialsDetail",credentialsDetailDirective),app.directive("profileCredentials",profileCredentialsDirective),app.factory("v3environmentService",v3environmentService),app.directive("environmentList",environmentListDirective),app.directive("environmentListItem",environmentListItemDirective),app.directive("environmentDetail",environmentDetailDirective),app.directive("environmentSettings",environmentSettingsDirective),app.directive("filterList",filterListDirective),app.directive("filterListItem",filterListItemDirective),app.directive("jobList",jobListDirective),app.directive("jobListItem",jobListItemDirective),app.directive("jobDetail",jobDetailDirective),app.directive("jobSettings",jobSettingsDirective),app.factory("v2jobService",v2jobService),app.directive("profileSettings",profileSettingsDirective),app.directive("profileContactSettings",profileContactSettingsDirective),app.directive("profileNotificationSettings",profileNotificationSettingsDirective),app.directive("profileApiSettings",profileApiSettingsDirective),app.factory("notificationService",notificationService),app.factory("notificationUnsubscribeService",notificationUnsubscribeService),app.directive("notificationSettings",notificationSettingsDirective),app.factory("triggerService",triggerService),app.factory("repositoryService",repositoryService),app.directive("repositoryDetail",repositoryDetailDirective),app.directive("runList",runListDirective),app.directive("runListItem",runListItemDirective),app.directive("runDetail",runDetailDirective),app.directive("runStep",runStepDirective),app.directive("sourceFreshness",sourceFreshnessDirective),app.factory("v2runService",v2runService),app.factory("v2runCancelService",v2runCancelService),app.factory("v2runArtifactsService",v2runArtifactsService),app.directive("settings",settingsDirective),app.directive("enterpriseSettings",enterpriseSettingsDirective),app.directive("billingDetail",billingDetailDirective),app.directive("billingConfirm",billingConfirmDirective),app.directive("billingSelectPlan",billingSelectPlanDirective),app.directive("billingPaymentInfo",billingPaymentInfoDirective),app.factory("githubService",githubService),app.factory("gitLabService",gitLabService),app.factory("slackService",slackService),app.factory("accountService",accountService),app.factory("billingService",billingService),app.factory("userService",userService),app.factory("constantService",constantService),app.factory("logTailService",logTailService),app.factory("eventService",eventService),app.factory("artifactService",artifactService),app.factory("projectService",projectService),app.factory("timeService",timeService),app.factory("connectionTestService",connectionTestService),app.directive("avatar",avatarDirective),app.directive("onUpload",onUploadDirective),app.directive("dbtDevelop",dbtDevelopDirective),app.factory("developService",developService),app.factory("storageService",storageService),app.filter("logs",logFilter),app.filter("permissions",permissionFilter),app.directive("reactPage",reactPageDirective),app.value("plansValue",plansValue),app.config(["$locationProvider",function($locationProvider){return $locationProvider.hashPrefix("")}]),app.config(["$provide",function($provide){return $provide.decorator("$http",["$delegate",function($delegate){var get=$delegate.get;return $delegate.get=function(url,config){return url.indexOf("components/")>-1&&url.indexOf(".html")>-1&&(-1===url.indexOf("?")?url+="?":url+="&",url+="v=".concat(window.cacheBustVersion)),get(url,config)},$delegate}])}]),app.config(["$resourceProvider",function($resourceProvider){return $resourceProvider.defaults.stripTrailingSlashes=!1}]),app.config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push((function($q,$window){return{responseError:function(response){var _response$data,data=null===(_response$data=response.data)||void 0===_response$data?void 0:_response$data.data;if(401!==response.status)return $q.reject(response);if(data&&data.sso_reauth&&data.sso_login_url&&data.account_id&&data.account_name){if(window.location.href.includes("/sso-reauth"))return $q.reject(response);var nextUrl=encodeURIComponent("".concat(window.location.pathname).concat(window.location.hash)),next=encodeURIComponent("&next=".concat(nextUrl)),loginUrl="".concat(data.sso_login_url).concat(next);window.location.href="/#/accounts/".concat(data.account_id,"/sso-reauth?account_name=").concat(data.account_name,"&sso_login_url=").concat(loginUrl)}else window.location.href="/logout/"}}}))}]),window.singleSpaAngularjs?window.angularApp=window.singleSpaAngularjs.default({angular,mainAngularModule:"dbt-cloud",uiRouter:!1,preserveGlobal:!1,template:"<container />",domElementGetter:function(){return document.querySelector(".spa-angular")}}):angular.bootstrap(document,["dbt-cloud"]),app}).apply(null,__WEBPACK_AMD_REQUIRE_ARRAY__)})).catch(__webpack_require__.oe)}).apply(null,[])})).catch(__webpack_require__.oe),(reactHotLoader="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&reactHotLoader.register(getCookie,"getCookie","/home/runner/work/dbt-cloud/dbt-cloud/sinter/static/components/app.js"),(leaveModule="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&leaveModule(module)}},0,[[70472,666]]]);